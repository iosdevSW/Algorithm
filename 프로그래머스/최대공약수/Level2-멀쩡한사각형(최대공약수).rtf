{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red213\green213\blue213;\red24\green24\blue26;}
{\*\expandedcolortbl;;\cssrgb\c86667\c86667\c86667;\cssrgb\c12157\c12549\c13725;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28\fsmilli14400 \cf2 \cb3 \expnd0\expndtw0\kerning0
import Foundation\
\
var minValue = -1\
\
func solution(_ N:Int, _ number:Int) -> Int \{\
    dfs(n:N, count:0, result:0, number: number)\
    \
    return minValue\
\}\
\
func dfs(n:Int, count: Int, result: Int, number: Int)\{\
    if count > 8 \{\
        return // 8\'ba\'b8\'b4\'d9 \'c5\'a9\'b8\'e9 \'b1\'d7\'b3\'c9 \'c1\'be\'b7\'e1 ( \'c3\'d6\'bc\'d2\'b0\'aa -1 )\
    \}\
    \
    //\'bf\'f8\'c7\'cf\'b4\'c2 \'b0\'aa \'b4\'de\'bc\'ba\'bd\'c3 \'c1\'be\'b7\'e1\
    if result == number \{\
        if count < minValue || minValue == -1 \{ //\'c7\'f6\'c0\'e7 \'c3\'d6\'bc\'d2\'b0\'aa\'ba\'b8\'b4\'d9 \'c0\'db\'c0\'ba \'bc\'f6\'b6\'f3\'b8\'e9 \'b9\'d9\'b2\'de\
            minValue = count\
        \}\
        return // \'c1\'be\'b7\'e1\
    \}\
    //n\'c0\'cc 1\'b0\'b3 \'c0\'cf\'b6\'a7\'ba\'ce\'c5\'cd 8\'b0\'b3 \'c0\'cf\'b6\'a7\'b1\'ee\'c1\'f6 \'b9\'dd\'ba\'b9\
    var NN = 0\
    for nCount in 0..<8 \{\
        NN = NN*10 + n\
        //\'bb\'e7\'c4\'a2\'bf\'ac\'bb\'ea\'bf\'a1 \'b5\'fb\'b6\'f3 \'c0\'e7\'b1\'cd\'c8\'a3\'c3\'e2\
        dfs(n:n, count: count + 1 + nCount, result: result + NN, number: number)\
        dfs(n:n, count: count + 1 + nCount, result: result - NN, number: number)\
        dfs(n:n, count: count + 1 + nCount, result: result * NN, number: number)\
        dfs(n:n, count: count + 1 + nCount, result: result / NN, number: number)\
    \}\
    \
\}\
\
}