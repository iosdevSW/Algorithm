{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red161\green103\blue230;\red161\green103\blue230;\red252\green106\blue93;
\red208\green191\blue105;\red103\green183\blue164;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c40538\c71705\c64209;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b8\'d3\'bd\'ba
\f1  
\f0 \'bd\'e6\'b8\'d3\'c0\'ce\'c5\'cf  \'c4\'da\'b5\'f9\'c5\'d7\'bd\'ba\'c6\'ae 1\'b9\'f8 \'b9\'ae\'c1\'a6\
\
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f2\fs28 \cf2 \cb3 import\cf4  Foundation\
\cf2 var\cf4  \cf5 employee\cf4  = \cf6 Dictionary\cf4 <\cf7 String\cf4 ,[\cf6 Int\cf4 ]>()\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  rooms:[\cf6 String\cf4 ], \cf5 _\cf4  target:\cf6 Int\cf4 ) -> [\cf7 String\cf4 ] \{\
    \
\
    \cf2 return\cf4  []\
\}\
\
\cf2 func\cf4  \cf5 arrange\cf4 (\cf5 str\cf4 : \cf6 String\cf4 )\{\
    \cf2 var\cf4  splitStr = str.\cf8 split\cf4 (\cf8 separator\cf4 : \cf9 "]"\cf4 )\
    splitStr[\cf10 0\cf4 ].\cf8 removeFirst\cf4 ()\
    \cf2 let\cf4  roomNumber = \cf6 Int\cf4 (\cf6 String\cf4 (splitStr[\cf10 0\cf4 ]))!\
    \cf2 let\cf4  splitName = splitStr[\cf10 1\cf4 ].\cf8 split\cf4 (\cf8 separator\cf4 : \cf9 ","\cf4 )\
\
    \cf2 for\cf4  name \cf2 in\cf4  splitName\{\
        \cf2 if\cf4  \cf11 employee\cf4 [\cf6 String\cf4 (name)] == \cf2 nil\cf4  \{\
            \cf2 let\cf4  array = [roomNumber]\
            \cf11 employee\cf4 [\cf6 String\cf4 (name)] = array\
        \}\cf2 else\cf4  \{\
            \cf11 employee\cf4 [\cf6 String\cf4 (name)]?.\cf8 append\cf4 (roomNumber)\
        \}\
    \}\
\}\
\
\cf2 func\cf4  \cf5 rank\cf4 (\cf5 _\cf4  target: \cf6 Int\cf4 )\{\
    \cf2 for\cf4  person \cf2 in\cf4  \cf11 employee\cf4  \{\
        person.\cf7 value\cf4 .\cf7 count\cf4 \
    \}\
\}\
\cf2 let\cf4  \cf5 strArray\cf4  = [\cf9 "[403]James"\cf4 , \cf9 "[404]Azad,Louis,Andy"\cf4 , \cf9 "[101]Azad,Guard"\cf4 ]\
\cf2 for\cf4  str \cf2 in\cf4  \cf11 strArray\cf4 \{\
    arrange(str: \cf11 str\cf4 )\
\}\
\cf8 print\cf4 (\cf11 employee\cf4 )\
\
}