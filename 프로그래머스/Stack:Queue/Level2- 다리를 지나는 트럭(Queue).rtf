{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red108\green121\blue134;\red161\green103\blue230;\red208\green191\blue105;
\red161\green103\blue230;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81498\c74939\c41233;
\csgenericrgb\c63232\c40219\c90115;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  bridge_length:\cf6 Int\cf4 , \cf5 _\cf4  weight:\cf6 Int\cf4 , \cf5 _\cf4  truck_weights:[\cf6 Int\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf7 // bridge 
\f1 \'c5\'a9\'b1\'e2\'b8\'b8\'c5\'ad
\f0  Queue 
\f1 \'b8\'b8\'b5\'e9\'b1\'e2
\f0 \cf4 \
    \cf2 var\cf4  bridgeQueue = [\cf6 Int\cf4 ].\cf8 init\cf4 (\cf8 repeating\cf4 : \cf9 0\cf4 , \cf8 count\cf4 : bridge_length)\
    \cf2 var\cf4  trucks = truck_weights\
    \cf2 var\cf4  currentWeight = \cf9 0\cf4 \
    \cf2 var\cf4  second = \cf9 0\cf4  \cf7 // 
\f1 \'bd\'c3\'b0\'a3
\f0 \cf4 \
    \
    \cf2 while\cf4  !bridgeQueue.\cf10 isEmpty\cf4 \{\
        second += \cf9 1\cf4 \
        currentWeight -= bridgeQueue.\cf8 removeFirst\cf4 () \cf7 // 
\f1 \'b4\'d9\'b8\'ae
\f0  
\f1 \'b8\'c7
\f0  
\f1 \'be\'d5
\f0  
\f1 \'b0\'f8\'b0\'a3
\f0  
\f1 \'bb\'e8\'c1\'a6
\f0  
\f1 \'bb\'e8\'c1\'a6\'c7\'cf\'b0\'ed
\f0  
\f1 \'b9\'ab\'b0\'d4\'b5\'b5
\f0  
\f1 \'95\'fb\'c1\'dc
\f0 \cf4 \
        \
        \cf2 if\cf4  \cf2 let\cf4  truck = trucks.\cf8 first\cf4  \{ \cf7 //
\f1 \'b9\'ab\'b0\'d4\'b0\'a1
\f0  
\f1 \'b3\'ca\'b9\'ab
\f0  
\f1 \'b9\'ab\'b0\'c5\'bf\'ec\'b8\'e9
\f0 \cf4 \
            \cf2 if\cf4  currentWeight + truck > weight \{\
                bridgeQueue.\cf8 append\cf4 (\cf9 0\cf4 ) \cf7 // 
\f1 \'ba\'f3\'b0\'f8\'b0\'a3
\f0  
\f1 \'c3\'df\'b0\'a1
\f0 \cf4 \
            \}\cf2 else\cf4  \{ \cf7 // 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c6\'ae\'b7\'b0\'c0\'cc
\f0  
\f1 \'b4\'d9\'b8\'ae\'bf\'a1
\f0  
\f1 \'bf\'c3\'b6\'f3\'b0\'a1\'b5\'b5
\f0  
\f1 \'b9\'ab\'b0\'d4\'b0\'a1
\f0  
\f1 \'b1\'a6\'c2\'fa\'b4\'d9\'b8\'e9
\f0 !\cf4 \
                currentWeight += trucks.\cf8 removeFirst\cf4 () \cf7 // 
\f1 \'b9\'ab\'b0\'d4\'bf\'a1
\f0  
\f1 \'c6\'ae\'b7\'b0\'b9\'ab\'b0\'d4
\f0  
\f1 \'c3\'df\'b0\'a1
\f0 \cf4 \
                bridgeQueue.\cf8 append\cf4 (truck) \cf7 // 
\f1 \'ba\'ea\'b8\'b4\'c1\'f6\'c5\'a5\'bf\'a1
\f0  
\f1 \'c6\'ae\'b7\'b0
\f0  
\f1 \'bb\'f0\'c0\'d4
\f0 !\cf4 \
            \}\
        \}\
    \}\
    \
    \cf2 return\cf4  second\
\}\
}