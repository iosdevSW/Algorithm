{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red208\green191\blue105;\red161\green103\blue230;\red252\green106\blue93;
\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c42394\c47462\c52518;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab674
\pard\tx674\pardeftab674\pardirnatural\partightenfactor0

\f0\fs28 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  places:[[\cf6 String\cf4 ]]) -> [\cf6 Int\cf4 ] \{\
    \cf2 var\cf4  roomResult = \cf7 1\cf4 \
    \cf2 var\cf4  result = [\cf6 Int\cf4 ]()\
    places.\cf8 forEach\cf4 \{ room \cf2 in\cf4 \
        roomResult = \cf7 1\cf4 \
        \cf2 let\cf4  classRoom = splitRoom(row: room)\
        \
        \cf2 for\cf4  i \cf2 in\cf4  \cf7 0\cf4 ...\cf7 4\cf4  \{\
            \cf2 for\cf4  j \cf2 in\cf4  \cf7 0\cf4 ...\cf7 4\cf4  \{\
                \cf2 if\cf4  classRoom[i][j] == \cf9 "P"\cf4  \{\
                    \cf2 if\cf4  manhattanDistance(room: classRoom, start: (i,j)) == \cf7 0\cf4  \{\
                        roomResult = \cf7 0\cf4 \
                        \cf2 break\cf4 \
                    \}\
                \}\
            \}\
        \}\
        result.\cf8 append\cf4 (roomResult)\
    \}\
    \cf2 return\cf4  result\
\}\
\
\cf2 func\cf4  \cf5 splitRoom\cf4 (\cf5 row\cf4  : [\cf6 String\cf4 ]) ->[[\cf6 String\cf4 ]]\{ \cf10 // string 
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'c3\'b3\'b8\'ae\'c7\'cf\'b1\'e2
\f0  
\f1 \'bd\'b1\'b0\'d4
\f0  2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af
\f0 \cf4 \
    \cf2 var\cf4  convertArray = [[\cf6 String\cf4 ]]()\
    row.\cf8 forEach\cf4  \{ str \cf2 in\cf4 \
        \cf2 let\cf4  convert = str.\cf8 map\cf4  \{\cf6 String\cf4 ($0)\}\
        convertArray.\cf8 append\cf4 (convert)\
    \}\
\
    \cf2 return\cf4  convertArray\
\}\
\
\cf2 func\cf4  \cf5 manhattanDistance\cf4 (\cf5 room\cf4 : [[\cf6 String\cf4 ]], \cf5 start\cf4 : (\cf6 Int\cf4 , \cf6 Int\cf4 ))->\cf6 Int\cf4  \{\
    \cf2 if\cf4  start.\cf7 1\cf4  < \cf7 4\cf4  && room[start.\cf7 0\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "P"\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \cf2 if\cf4  start.\cf7 1\cf4  < \cf7 3\cf4  && room[start.\cf7 0\cf4 ][start.\cf7 1\cf4  + \cf7 2\cf4 ] == \cf9 "P"\cf4  \{\
        \cf2 if\cf4  room[start.\cf7 0\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "X"\cf4  \{\
        \}\cf2 else\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \}\
    \
    \cf2 if\cf4  start.\cf7 0\cf4  < \cf7 4\cf4  && room[start.\cf7 0\cf4  + \cf7 1\cf4 ][start.\cf7 1\cf4 ] == \cf9 "P"\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \cf2 if\cf4  start.\cf7 0\cf4  < \cf7 3\cf4  && room[start.\cf7 0\cf4  + \cf7 2\cf4 ][start.\cf7 1\cf4 ] == \cf9 "P"\cf4  \{\
        \cf2 if\cf4  room[start.\cf7 0\cf4  + \cf7 1\cf4 ][start.\cf7 1\cf4 ] == \cf9 "X"\cf4  \{\
        \}\cf2 else\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \}\
\
    \cf2 if\cf4  start.\cf7 0\cf4  < \cf7 4\cf4  && start.\cf7 1\cf4  < \cf7 4\cf4  && room[start.\cf7 0\cf4  + \cf7 1\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "P"\cf4  \{\
        \cf2 if\cf4  room[start.\cf7 0\cf4  + \cf7 1\cf4 ][start.\cf7 1\cf4 ] == \cf9 "X"\cf4  && room[start.\cf7 0\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "X"\cf4  \{\
        \}\cf2 else\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \}\
    \
    \cf2 if\cf4  start.\cf7 0\cf4  > \cf7 0\cf4  && start.\cf7 1\cf4  < \cf7 4\cf4  && room[start.\cf7 0\cf4  - \cf7 1\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "P"\cf4  \{\
        \cf2 if\cf4  room[start.\cf7 0\cf4  - \cf7 1\cf4 ][start.\cf7 1\cf4 ] == \cf9 "X"\cf4  && room[start.\cf7 0\cf4 ][start.\cf7 1\cf4  + \cf7 1\cf4 ] == \cf9 "X"\cf4  \{\
            \}\cf2 else\cf4  \{ \cf2 return\cf4  \cf7 0\cf4  \}\
    \}\
    \cf2 return\cf4  \cf7 1\cf4 \
\}\
}