{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red108\green121\blue134;\red161\green103\blue230;\red208\green191\blue105;
\red103\green183\blue164;\red161\green103\blue230;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81498\c74939\c41233;
\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c63232\c40219\c90115;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 var\cf4  \cf5 result\cf4  = [\cf6 Int\cf4 ]()\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  begin:\cf6 String\cf4 , \cf5 _\cf4  target:\cf6 String\cf4 , \cf5 _\cf4  words:[\cf6 String\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf7 //word
\f1 \'bf\'a1
\f0  target
\f1 \'c0\'cc
\f0  
\f1 \'be\'f8\'c0\'b8\'b8\'e9
\f0  0
\f1 \'c0\'bb
\f0  
\f1 \'b9\'dd\'c8\'af
\f0 \cf4 \
    \cf2 if\cf4  !words.\cf8 contains\cf4 (target)\{\
        \cf2 return\cf4  \cf9 0\cf4 \
    \}\
    bfs(word: begin, words: words, count: \cf9 0\cf4 , target: target)\
    \
    \cf2 return\cf4  \cf10 result\cf4 .\cf8 min\cf4 ()! \cf7 //
\f1 \'b0\'e1\'b0\'fa
\f0  
\f1 \'c1\'df
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'c0\'db\'c0\'ba\'b0\'cd
\f0  
\f1 \'b9\'dd\'c8\'af
\f0 \cf4 \
\}\
\
\cf2 func\cf4  \cf5 bfs\cf4 (\cf5 word\cf4 : \cf6 String\cf4 , \cf5 words\cf4 : [\cf6 String\cf4 ], \cf5 count\cf4 : \cf6 Int\cf4 , \cf5 target\cf4 :\cf6 String\cf4 )\{\
    \cf2 var\cf4  nextWords = words\
    \
    \cf2 if\cf4  word == target \{ \cf7 // 
\f1 \'b4\'dc\'be\'ee
\f0  
\f1 \'c0\'cf\'c4\'a1\'c7\'cf\'b8\'e9
\f0  
\f1 \'c1\'be\'b7\'e1
\f0 \cf4 \
        \cf10 result\cf4 .\cf8 append\cf4 (count)\
        \cf2 return\cf4 \
    \}\
    \
    \cf2 if\cf4  nextWords.\cf11 isEmpty\cf4  \{\
        \cf2 return\cf4  \cf7 //
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'b4\'dc\'be\'ee
\f0  
\f1 \'bc\'f8\'c8\'b8\'bd\'c3
\f0  
\f1 \'b1\'d7\'b3\'c9
\f0  
\f1 \'c1\'be\'b7\'e1
\f0 \cf4 \
    \}\
    \
    \cf2 for\cf4  w \cf2 in\cf4  words \{\
        \cf2 if\cf4  isChange(word: word, nextWord: w) \{ \cf7 //
\f1 \'ba\'af\'b0\'e6
\f0  
\f1 \'b0\'a1\'b4\'c9\'c7\'d1
\f0  
\f1 \'b4\'dc\'be\'ee\'c0\'cc\'b8\'e9
\f0 \cf4 \
            nextWords.\cf8 remove\cf4 (\cf8 at\cf4 : nextWords.\cf8 firstIndex\cf4 (\cf8 of\cf4 : w)!) \cf7 //
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c3\'bc\'c5\'a9\'c7\'d2
\f0  
\f1 \'b4\'dc\'be\'ee\'b5\'e9\'bf\'a1\'bc\'ad
\f0  
\f1 \'c1\'a6\'b0\'c5
\f0 \cf4 \
            bfs(word: w, words: nextWords, count: count+\cf9 1\cf4 , target: target) \cf7 // 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c5\'bd\'bb\'f6
\f0 \cf4 \
        \}\
    \}\
\}\
\
\cf7 //
\f1 \'b4\'dc\'be\'ee\'b0\'a1
\f0  1
\f1 \'b0\'b3\'c2\'f7\'c0\'cc
\f0  
\f1 \'b3\'aa\'b4\'c2\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'cf\'b4\'c2
\f0  
\f1 \'c7\'d4\'bc\'f6
\f0 \cf4 \
\cf2 func\cf4  \cf5 isChange\cf4 (\cf5 word\cf4 : \cf6 String\cf4 , \cf5 nextWord\cf4 : \cf6 String\cf4 ) -> \cf6 Bool\cf4 \{\
    \cf7 //
\f1 \'c3\'b3\'b8\'ae\'c7\'cf\'b1\'e2
\f0  
\f1 \'c1\'c1\'b0\'d4
\f0  
\f1 \'b9\'e8\'bf\'ad\'b7\'ce
\f0  
\f1 \'c5\'b8\'c0\'d4\'ba\'af\'c8\'af
\f0 \cf4 \
    \cf2 let\cf4  wordArr = \cf6 Array\cf4 (word)\
    \cf2 let\cf4  nWordArr = \cf6 Array\cf4 (nextWord)\
    \
    \cf2 var\cf4  diff = \cf9 0\cf4  \cf7 // 
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'be\'cb\'c6\'c4\'ba\'aa
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c4\'ab\'bf\'ee\'c6\'ae
\f0  
\f1 \'ba\'af\'bc\'f6
\f0 \cf4 \
    \cf2 for\cf4  (idx,\cf11 value\cf4 ) \cf2 in\cf4  wordArr.\cf8 enumerated\cf4 ()\{\
        \cf2 if\cf4  \cf11 value\cf4  != nWordArr[idx] \{ diff += \cf9 1\cf4  \} \cf7 // 
\f1 \'b4\'d9\'b8\'a3\'b8\'e9
\f0  +1\cf4 \
    \}\
    \
    \cf2 if\cf4  diff == \cf9 1\cf4  \{ \cf7 // 1
\f1 \'c0\'cc\'b8\'e9
\f0  true\cf4 \
        \cf2 return\cf4  \cf2 true\cf4 \
    \}\
    \cf2 return\cf4  \cf2 false\cf4 \
\}\
\
}