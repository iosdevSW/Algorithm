{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red108\green121\blue134;\red31\green31\blue36;\red255\green255\blue255;
\red252\green95\blue163;\red65\green161\blue192;\red208\green168\blue255;\red208\green191\blue105;\red161\green103\blue230;
\red161\green103\blue230;}
{\*\expandedcolortbl;;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63232\c40219\c90115;
\csgenericrgb\c63137\c40392\c90196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 // 
\f1 \'b3\'bb
\f0  
\f1 \'c7\'ae\'c0\'cc
\f0 \cf4 \
\cf5 import\cf4  Foundation\
\
\cf5 func\cf4  \cf6 solution\cf4 (\cf6 _\cf4  progresses:[\cf7 Int\cf4 ], \cf6 _\cf4  speeds:[\cf7 Int\cf4 ]) -> [\cf7 Int\cf4 ] \{\
    \cf5 var\cf4  stack = progresses\
    \cf5 var\cf4  speeds = speeds\
    \cf5 var\cf4  count = \cf8 0\cf4  \cf2 // 
\f1 \'c1\'f8\'b5\'b5\'c0\'b2
\f0  100
\f1 \'c0\'ce
\f0  
\f1 \'c0\'db\'be\'f7
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c4\'ab\'bf\'ee\'c5\'cd
\f0  
\f1 \'ba\'af\'bc\'f6
\f0 \cf4 \
    \cf5 var\cf4  result = [\cf7 Int\cf4 ]()\
   \
    \cf5 while\cf4  !stack.\cf9 isEmpty\cf4  \{ \cf2 // stack
\f1 \'c0\'cc
\f0  
\f1 \'ba\'f4\'b6\'a7\'b1\'ee\'c1\'f6
\f0  
\f1 \'b9\'dd\'ba\'b9
\f0 \cf4 \
        \cf2 //
\f1 \'c7\'cf\'b7\'e7\'b0\'a1
\f0  
\f1 \'c1\'f6\'b3\'aa
\f0  
\f1 \'c1\'f8\'b5\'b5\'c0\'b2
\f0  
\f1 \'bb\'f3\'bd\'c2
\f0 \cf4 \
        \cf5 for\cf4  (idx,\cf9 progress\cf4 ) \cf5 in\cf4  stack.\cf10 enumerated\cf4 () \{\
            stack[idx] += speeds[idx]\
        \}\
        \
        \cf5 while\cf4  \cf5 true\cf4  \{\
            \cf5 if\cf4  \cf5 let\cf4  first = stack.\cf10 first\cf4  \{\
                \cf5 if\cf4  first >= \cf8 100\cf4  \{ \cf2 // 
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'be\'d5
\f0  
\f1 \'bc\'b1
\f0  
\f1 \'bc\'f8\'bc\'ad\'c0\'c7
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'c7
\f0  
\f1 \'c1\'f8\'b5\'b5\'c0\'b2\'c0\'cc
\f0  100 
\f1 \'c0\'cf\'b6\'a7
\f0 \cf4 \
                    count += \cf8 1\cf4  \cf2 // 
\f1 \'c4\'ab\'bf\'ee\'c6\'ae
\f0 \cf4 \
                    stack.\cf10 removeFirst\cf4 () \cf2 // 
\f1 \'c1\'a6\'b0\'c5
\f0 \cf4 \
                    speeds.\cf10 removeFirst\cf4 () \cf2 // 
\f1 \'c1\'a6\'b0\'c5
\f0 \cf4 \
                \}\cf5 else\cf4  \{\
                    \cf5 break\cf4  \cf2 // 
\f1 \'be\'d5\'bc\'b1
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f0  
\f1 \'c1\'f8\'b5\'b5\'c0\'b2
\f0  100
\f1 \'c0\'cc
\f0  
\f1 \'be\'c6\'b4\'cf\'b8\'e9
\f0  
\f1 \'b7\'e7\'c7\'c1
\f0  
\f1 \'ba\'fc\'c1\'ae\'b3\'aa\'bf\'c8
\f0 \cf4 \
                \}\
            \}\cf5 else\cf4  \{ \cf5 break\cf4  \} \cf2 // 
\f1 \'b8\'b6\'c1\'f6\'b8\'b7
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'bb
\f0  
\f1 \'c4\'ab\'bf\'ee\'c6\'ae
\f0  
\f1 \'c7\'df\'b4\'d9\'b8\'e9
\f0  
\f1 \'ba\'fc\'c1\'ae\'b3\'aa\'bf\'c8
\f0 \cf4 \
        \}\
\
        \cf5 if\cf4  count != \cf8 0\cf4  \{ \cf2 // 
\f1 \'c0\'db\'be\'f7\'c0\'b2
\f0  100
\f1 \'c0\'ce
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f0  
\f1 \'c7\'cf\'b3\'aa\'b6\'f3\'b5\'b5
\f0  
\f1 \'c0\'d6\'c0\'b8\'b8\'e9
\f0  
\f1 \'b0\'e1\'b0\'fa
\f0  
\f1 \'b9\'e8\'bf\'ad\'bf\'a1
\f0  
\f1 \'c3\'df\'b0\'a1
\f0 \cf4 \
            result.\cf10 append\cf4 (count)\
        \}\
        \
        count = \cf8 0\cf4  \cf2 // 
\f1 \'c4\'ab\'bf\'ee\'c5\'cd
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 \cf4 \
    \}\
    \cf5 return\cf4  result\
\}\
\
\cf2 // 
\f1 \'bd\'c3\'b0\'a3
\f0  
\f1 \'c8\'bf\'c0\'b2
\f0  
\f1 \'b5\'fe\'b8\'b2
\f0  -> 
\f1 \'c8\'bf\'c0\'b2\'c0\'fb
\f0  
\f1 \'c4\'da\'b5\'e5
\f0 \cf4 \
\
\cf5 import\cf4  Foundation\
\
\cf5 func\cf4  \cf6 solution\cf4 (\cf6 _\cf4  progresses:[\cf7 Int\cf4 ], \cf6 _\cf4  speeds:[\cf7 Int\cf4 ]) -> [\cf7 Int\cf4 ] \{\
    \cf5 var\cf4  lastReleaseDate: \cf7 Int\cf4  = \cf8 0\cf4  \cf2 //
\f1 \'b8\'b6\'c1\'f6\'b8\'b7
\f0  
\f1 \'b9\'e8\'c6\'f7
\f0 \cf4 \
    \cf5 var\cf4  numOfReleases: [\cf7 Int\cf4 ] = [] \cf2 //
\f1 \'b9\'e8\'c6\'f7
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 \cf4 \
    \cf5 for\cf4  i \cf5 in\cf4  \cf8 0\cf4 ..<progresses.\cf9 count\cf4  \{\
        \cf5 let\cf4  progress = \cf7 Double\cf4 (progresses[i]) \cf2 // Double
\f1 \'c5\'b8\'c0\'d4\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af
\f0 \cf4 \
        \cf5 let\cf4  speed = \cf7 Double\cf4 (speeds[i]) \cf2 // Double
\f1 \'c5\'b8\'c0\'d4\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af
\f0 \cf4 \
        \cf2 // 
\f1 \'b3\'b2\'c0\'ba
\f0  
\f1 \'c6\'db\'bc\'be\'c6\'ae\'b8\'a6
\f0  
\f1 \'bd\'ba\'c7\'c7\'b5\'e5\'b7\'ce
\f0  
\f1 \'b3\'aa\'b4\'a9\'be\'ee
\f0  
\f1 \'b8\'ee
\f0  
\f1 \'c0\'cf
\f0  
\f1 \'b0\'c9\'b8\'b1\'c1\'f6
\f0  
\f1 \'b0\'e8\'bb\'ea
\f0 \cf4 \
        \cf5 let\cf4  day = \cf7 Int\cf4 (\cf10 ceil\cf4 ((\cf8 100\cf4  - progress) / speed)) \cf2 // ceil -> 
\f1 \'bc\'d2\'bc\'f6\'c1\'a1
\f0  
\f1 \'bf\'c3\'b8\'b2
\f0  
\f1 \'c7\'d4\'bc\'f6
\f0 \cf4 \
        \
\cf2 		// for
\f1 \'b9\'ae\'bf\'a1
\f0  
\f1 \'c0\'c7\'c7\'d8
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f0  
\f1 \'c2\'f7\'b7\'ca\'b4\'eb\'b7\'ce
\f0  
\f1 \'c0\'cf
\f0  
\f1 \'bc\'f6\'b0\'a1
\f0  
\f1 \'b0\'e8\'bb\'ea
\f0  
\f1 \'b5\'c9
\f0  
\f1 \'b6\'a7
\f0 \cf4 \
        \cf5 if\cf4  day > lastReleaseDate \{ \cf2 //
\f1 \'be\'d5\'bc\'b1
\f0  
\f1 \'c0\'db\'be\'f7\'b5\'e9\'ba\'b8\'b4\'d9
\f0  
\f1 \'c7\'f6\'c0\'e7
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'cc
\f0  
\f1 \'b4\'f5
\f0  
\f1 \'bf\'c0\'b7\'a1
\f0  
\f1 \'b0\'c9\'b8\'b1\'b6\'a7
\f0 \cf4 \
            lastReleaseDate = day  \cf2 //
\f1 \'c1\'a6\'c0\'cf
\f0  
\f1 \'bf\'c0\'b7\'a1\'b0\'c9\'b8\'ae\'b4\'c2
\f0  
\f1 \'b3\'af\'c2\'a5\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b0\'ed
\f0 \cf4 \
            numOfReleases.\cf10 append\cf4 (\cf8 1\cf4 ) \cf2 // 
\f1 \'b1\'d7
\f0  
\f1 \'b3\'af\'bf\'a1
\f0  
\f1 \'c0\'db\'be\'f7
\f0  
\f1 \'bf\'cf\'b7\'e1 \'b0\'b3\'bc\'f6 \'c7\'cf\'b3\'aa \'c4\'ab\'bf\'ee\'c6\'ae
\f0 \cf4 \
        \} \cf5 else\cf4  \{\
 		\cf2 // 
\f1 \'be\'d5\'bc\'b1
\f0  
\f1 \'c0\'db\'be\'f7\'ba\'b8\'b4\'d9
\f0  
\f1 \'b8\'d5\'c0\'fa
\f0  
\f1 \'bf\'cf\'b7\'e1
\f0  
\f1 \'b5\'c6\'b0\'c5\'b3\'aa
\f0  
\f1 \'b0\'b0\'c0\'ba
\f0  
\f1 \'b3\'af
\f0  
\f1 \'bf\'cf\'b7\'e1
\f0  
\f1 \'b5\'c6\'c0\'bb\'bd\'c3
\f0  
\f1 \'be\'d5\'bc\'b1
\f0  
\f1 \'c0\'db\'be\'f7\'b0\'fa
\f0  
\f1 \'c7\'d4\'b2\'b2
\f0  
\f1 \'b9\'e8\'c6\'f7
\f0  
\f1 \'c0\'db\'be\'f7
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c4\'ab\'bf\'ee\'c6\'ae
\f0 \cf4 \
            numOfReleases[numOfReleases.\cf9 count\cf4  - \cf8 1\cf4 ] += \cf8 1\cf4 \
        \}\
    \}\
    \cf5 return\cf4  numOfReleases\
\}\
}