{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red161\green103\blue230;\red208\green191\blue105;\red161\green103\blue230;
\red252\green106\blue93;\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63232\c40219\c90115;
\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c42394\c47462\c52518;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25400\viewh13000\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  name:\cf6 String\cf4 ) -> \cf6 Int\cf4  \{\
    \cf2 let\cf4  alphabets = name.\cf7 map\cf4 \{\cf6 Character\cf4 (\cf6 String\cf4 ($0))\}\
    \cf2 var\cf4  totalMove = \cf8 0\cf4 \
    \cf2 var\cf4  move = name.\cf9 count\cf4 -\cf8 1\cf4 \
\
    \cf2 for\cf4  i \cf2 in\cf4  \cf8 0\cf4 ..<alphabets.\cf9 count\cf4  \{\
        \cf2 if\cf4  alphabets[i] != \cf10 "A"\cf4  \{ \cf11 // A
\f1 \'b8\'e9
\f0  
\f1 \'c0\'cc
\f0  
\f1 \'b0\'fa\'c1\'a4
\f0  
\f1 \'bb\'fd\'b7\'ab
\f0 \cf4 \
            \cf2 let\cf4  up = alphabets[i].\cf9 asciiValue\cf4 ! - \cf8 65\cf4  \cf11 //
\f1 \'c0\'a7\'b7\'ce
\f0  
\f1 \'c1\'b6\'c0\'db\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \cf4 \
            \cf2 let\cf4  down = \cf8 91\cf4  - alphabets[i].\cf9 asciiValue\cf4 ! \cf11 // 
\f1 \'be\'c6\'b7\'a1\'b7\'ce
\f0  
\f1 \'c1\'b6\'c0\'db\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \cf4 \
            \cf2 let\cf4  minV = \cf6 Int\cf4 (\cf7 min\cf4 (up, down)) \cf11 // 
\f1 \'c3\'d6\'bc\'d2\'c0\'c7
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \cf4 \
            \
            totalMove += minV\
        \}\
        \cf2 var\cf4  next = i + \cf8 1\cf4  \cf11 // 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f0 \cf4 \
        \
        \cf11 // 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b0\'a1
\f0  
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9
\f0  
\f1 \'c0\'db\'b0\'ed
\f0 , A
\f1 \'b6\'f3\'b8\'e9
\f0  
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b5\'b5
\f0  A
\f1 \'c0\'ce\'c1\'f6
\f0  
\f1 \'b0\'cb\'bb\'e7
\f0 \cf4 \
        \cf2 while\cf4  next < name.\cf9 count\cf4  && alphabets[next] == \cf10 "A"\cf4  \{\
            next += \cf8 1\cf4  \cf11 // A
\f1 \'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'d2\'b6\'a7\'b1\'ee\'c1\'f6
\f0  
\f1 \'c1\'f5\'b0\'a1\'bd\'c3\'c4\'d1\'ba\'bd
\f0 .\cf4 \
        \}\
    \
        \cf11 // 
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'b8\'b7\'ce
\f0  
\f1 \'b8\'d5\'c0\'fa
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'d2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \cf4 \
        \cf2 let\cf4  moveRight = i * \cf8 2\cf4  + (name.\cf9 count\cf4  - next)\
        \cf11 // 
\f1 \'bf\'de\'c2\'ca\'c0\'b8\'b7\'ce
\f0  
\f1 \'b8\'d5\'c0\'fa
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'d2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \cf4 \
        \cf2 let\cf4  moveLeft = (name.\cf9 count\cf4  - next) * \cf8 2\cf4  + i\
\
        \cf11 // 
\f1 \'b5\'d1
\f0  
\f1 \'c1\'df\'bf\'a1
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'e6\'b7\'ce
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \cf4 \
        move = \cf7 min\cf4 (move, moveRight)\
        move = \cf7 min\cf4 (move, moveLeft)\
    \}\
    \
    \cf2 return\cf4  totalMove + move\
\}\
\
\
}