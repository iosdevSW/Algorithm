{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red208\green191\blue105;\red161\green103\blue230;\red108\green121\blue134;
\red161\green103\blue230;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c42394\c47462\c52518;
\csgenericrgb\c63232\c40219\c90115;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  n:\cf6 Int\cf4 , \cf5 _\cf4  words:[\cf6 String\cf4 ]) -> [\cf6 Int\cf4 ] \{\
    \cf2 var\cf4  stack = [\cf6 String\cf4 ]()\
    \cf2 var\cf4  count = \cf7 0\cf4 \
    \
    \cf2 for\cf4  word \cf2 in\cf4  words \{\
        count += \cf7 1\cf4 \
        \cf2 if\cf4  stack.\cf8 \cb3 contains\cf4 \cb3 (word) \{ \cf9 // 
\f1 \'c0\'cc\'b9\'cc
\f0  
\f1 \'b3\'aa\'bf\'c2
\f0  
\f1 \'bc\'f6\'b8\'e9
\f0  
\f1 \'c1\'df\'b4\'dc
\f0 .\cf4 \
            \cf2 break\cf4 \
        \}\
        \cf2 if\cf4  stack.\cf10 \cb3 isEmpty\cf4 \cb3  \{ \cf9 // 
\f1 \'c3\'b9
\f0  
\f1 \'b4\'dc\'be\'ee
\f0  
\f1 \'bd\'c3\'c0\'db
\f0 \cf4 \
            stack.\cf8 \cb3 append\cf4 \cb3 (word)\
        \}\cf2 else\cf4  \{ \cf9 //
\f1 \'b0\'f8\'b9\'e9
\f0  
\f1 \'be\'c6\'b4\'d2\'b6\'a7
\f0 \cf4 \
            \cf2 if\cf4  \cf2 let\cf4  last = stack.\cf10 \cb3 last\cf4 \cb3  \{\
                \cf2 if\cf4  last.\cf8 \cb3 suffix\cf4 \cb3 (\cf7 1\cf4 ) == word.\cf8 \cb3 prefix\cf4 \cb3 (\cf7 1\cf4 ) \{\
                    stack.\cf8 \cb3 append\cf4 \cb3 (word)\
                \}\cf2 else\cf4  \{\
                    \cf2 break\cf4 \
                \}\
            \}\
        \}\
    \}\
    \
    \cf2 if\cf4  stack.\cf10 \cb3 count\cf4 \cb3  == count \{\
        \cf2 return\cf4  [\cf7 0\cf4 ,\cf7 0\cf4 ]\
    \}\
    \
    \cf2 return\cf4  [\
        (count % n) == \cf7 0\cf4  ? n : count % n,\
        (count % n) == \cf7 0\cf4  ? count/n : count/n + \cf7 1\cf4 \
    ]\
\}\
}