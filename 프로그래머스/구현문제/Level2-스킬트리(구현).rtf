{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red161\green103\blue230;\red208\green191\blue105;\red108\green121\blue134;
\red161\green103\blue230;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c42394\c47462\c52518;
\csgenericrgb\c63232\c40219\c90115;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  skill:\cf6 String\cf4 , \cf5 _\cf4  skill_trees:[\cf6 String\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf2 let\cf4  trees = skill_trees.\cf7 map\cf4 \{$0.\cf7 map\cf4 \{\cf6 String\cf4 ($0)\}\}\
    \cf2 var\cf4  count = \cf8 0\cf4 \
    \
    \cf2 for\cf4  tree \cf2 in\cf4  trees \{\
        \cf2 var\cf4  skill = skill.\cf7 map\cf4 \{\cf6 String\cf4 ($0)\} \cf9 //
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'bd\'ba\'c5\'b3\'c6\'ae\'b8\'ae
\f0 \cf4 \
        \cf2 var\cf4  isRun = \cf2 true\cf4  \cf9 // 
\f1 \'b0\'a1\'b4\'c9\'c7\'d1
\f0  
\f1 \'bd\'ba\'c5\'b3
\f0  
\f1 \'c6\'ae\'b8\'ae\'c0\'ce\'c1\'f6
\f0  
\f1 \'bf\'a9\'ba\'ce
\f0 \cf4 \
        \cf2 var\cf4  nextSkill = skill.\cf7 removeFirst\cf4 () \cf9 // 
\f1 \'c3\'b9
\f0  
\f1 \'b9\'f8\'c2\'b0
\f0  
\f1 \'bd\'ba\'c5\'b3\'c0\'ba
\f0  
\f1 \'b9\'e8\'bf\'ef
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce
\f0  
\f1 \'bb\'a9\'b1\'e2
\f0 \cf4 \
        \cf2 for\cf4  sk \cf2 in\cf4  tree \{\
            \cf2 if\cf4  skill.\cf7 contains\cf4 (sk)\{ \cf9 // 
\f1 \'c7\'f6\'c0\'e7
\f0  
\f1 \'bd\'ba\'c5\'b3\'c0\'cc
\f0  
\f1 \'b9\'e8\'bf\'ef
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'c2
\f0  
\f1 \'bd\'ba\'c5\'b3\'c0\'cc\'b8\'e9
\f0  
\f1 \'b8\'d8\'c3\'df\'b0\'ed
\f0  
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'bd\'ba\'c5\'b3\'c6\'ae\'b8\'ae
\f0  
\f1 \'c5\'bd\'bb\'f6
\f0 \cf4 \
                isRun = \cf2 false\cf4 \
                \cf2 break\cf4 \
            \}\
            \cf2 if\cf4  sk == nextSkill && !skill.\cf10 isEmpty\cf4  \{\
                nextSkill = skill.\cf7 removeFirst\cf4 ()\
            \}\
        \}\
        \cf2 if\cf4  isRun \{\
            count+=\cf8 1\cf4 \
        \}\
    \}\
    \
    \cf2 return\cf4  count\
\}\
\
}