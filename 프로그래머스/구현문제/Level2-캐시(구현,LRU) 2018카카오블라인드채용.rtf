{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red208\green191\blue105;\red161\green103\blue230;\red161\green103\blue230;
\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c63137\c40392\c90196;
\csgenericrgb\c42394\c47462\c52518;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  cacheSize:\cf6 Int\cf4 , \cf5 _\cf4  cities:[\cf6 String\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf2 var\cf4  cache = [\cf6 String\cf4 ]()\
    \cf2 var\cf4  runTime = \cf7 0\cf4 \
    \
    \cf2 if\cf4  cacheSize == \cf7 0\cf4  \{\
        \cf2 return\cf4  cities.\cf8 count\cf4  * \cf7 5\cf4 \
    \}\
    \
    \cf2 for\cf4  city \cf2 in\cf4  cities \{\
        \cf2 let\cf4  city = city.\cf9 lowercased\cf4 ()\
        \cf2 if\cf4  cache.\cf8 count\cf4  == cacheSize \{ \cf10 //
\f1 \'c7\'ae
\f0 \cf4 \
            \cf2 if\cf4  \cf2 let\cf4  idx = cache.\cf9 firstIndex\cf4 (\cf9 of\cf4 : city) \{ \cf10 // hit\cf4 \
                \cf2 let\cf4  value = cache.\cf9 remove\cf4 (\cf9 at\cf4 : idx)\
                runTime += \cf7 1\cf4 \
                cache.\cf9 append\cf4 (value)\
            \}\cf2 else\cf4  \{ \cf10 // miss\cf4 \
                runTime += \cf7 5\cf4 \
                cache.\cf9 removeFirst\cf4 ()\
                cache.\cf9 append\cf4 (city)\
            \}\
        \}\cf2 else\cf4  \{ \cf10 //
\f1 \'ba\'f3\'b0\'f8\'b0\'a3
\f0  
\f1 \'c0\'d6\'c0\'bd
\f0 \cf4 \
            \cf2 if\cf4  \cf2 let\cf4  idx = cache.\cf9 firstIndex\cf4 (\cf9 of\cf4 : city) \{ \cf10 // hit\cf4 \
                \cf2 let\cf4  value = cache.\cf9 remove\cf4 (\cf9 at\cf4 : idx)\
                runTime += \cf7 1\cf4 \
                cache.\cf9 append\cf4 (value)\
            \}\cf2 else\cf4  \{ \cf10 // miss\cf4 \
                runTime += \cf7 5\cf4 \
                cache.\cf9 append\cf4 (city)\
            \}\
        \}\
    \}\
    \
    \cf2 return\cf4  runTime\
\}\
}