{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red161\green103\blue230;\red208\green191\blue105;\red108\green121\blue134;
\red252\green106\blue93;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c42394\c47462\c52518;
\csgenericrgb\c98912\c41558\c36568;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  m:\cf6 Int\cf4 , \cf5 _\cf4  n:\cf6 Int\cf4 , \cf5 _\cf4  board:[\cf6 String\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf2 var\cf4  arr = board.\cf7 map\cf4 \{ $0.\cf7 map\cf4 \{ \cf6 String\cf4 ($0) \} \}\
    \cf2 var\cf4  count = \cf8 0\cf4 \
    \cf2 var\cf4  removeBoard = \cf6 Set\cf4 <[\cf6 Int\cf4 ]>()\
   \
    \cf2 func\cf4  \cf5 check\cf4 () \{\
        \cf9 // 2x2
\f1 \'b0\'b0\'c0\'ba
\f0  
\f1 \'b8\'f0\'be\'e7
\f0  
\f1 \'c1\'c2\'c7\'a5
\f0  
\f1 \'b1\'b8\'c7\'cf\'bf\'a9
\f0  
\f1 \'c1\'df\'ba\'b9\'be\'f8\'c0\'cc
\f0  
\f1 \'b4\'e3\'b1\'e2
\f0 \cf4 \
        \cf2 for\cf4  i \cf2 in\cf4  \cf7 stride\cf4 (\cf7 from\cf4 :\cf8 0\cf4 , \cf7 to\cf4 : m-\cf8 1\cf4 , \cf7 by\cf4 : \cf8 1\cf4 ) \{\
            \cf2 for\cf4  j \cf2 in\cf4  \cf7 stride\cf4 (\cf7 from\cf4 :\cf8 0\cf4 , \cf7 to\cf4 : n-\cf8 1\cf4 , \cf7 by\cf4 : \cf8 1\cf4 ) \{\
                \cf2 let\cf4  point = arr[i][j]\
                \cf2 if\cf4  point == \cf10 "0"\cf4  \{\
                    \cf2 continue\cf4 \
                \}\
                \cf2 if\cf4  point == arr[i][j+\cf8 1\cf4 ] && point == arr[i+\cf8 1\cf4 ][j] && point == arr[i+\cf8 1\cf4 ][j+\cf8 1\cf4 ] \{\
                    removeBoard.\cf7 insert\cf4 ([i,j])\
                    removeBoard.\cf7 insert\cf4 ([i+\cf8 1\cf4 ,j])\
                    removeBoard.\cf7 insert\cf4 ([i,j+\cf8 1\cf4 ])\
                    removeBoard.\cf7 insert\cf4 ([i+\cf8 1\cf4 ,j+\cf8 1\cf4 ])\
                \}\
            \}\
        \}\
    \}\
    \
    \cf2 func\cf4  \cf5 countRemove\cf4 () \{\
        \cf9 //
\f1 \'c1\'df\'ba\'b9\'be\'f8\'c0\'cc
\f0  
\f1 \'b4\'e3\'c0\'ba
\f0  
\f1 \'c1\'c2\'c7\'a5
\f0  
\f1 \'b8\'f0\'be\'e7
\f0  
\f1 \'bb\'e8\'c1\'a6
\f0 (
\f1 \'b8\'f0\'be\'e7
\f0  
\f1 \'ba\'af\'b0\'e6
\f0  -> 0)\cf4 \
        \cf2 for\cf4  location \cf2 in\cf4  removeBoard \{\
            arr[location[\cf8 0\cf4 ]][location[\cf8 1\cf4 ]] = \cf10 "0"\cf4 \
            count+=\cf8 1\cf4 \
        \}\
    \}\
    \
    \cf2 func\cf4  \cf5 sortBoard\cf4 ()\{\
        \cf9 // 
\f1 \'bb\'e8\'c1\'a6\'b5\'c8
\f0  
\f1 \'c4\'ad\'b8\'b8\'c5\'ad
\f0  
\f1 \'b3\'bb\'b7\'c1\'c1\'d6\'b1\'e2
\f0 \cf4 \
        \cf2 for\cf4  j \cf2 in\cf4  \cf7 stride\cf4 (\cf7 from\cf4 : \cf8 0\cf4 , \cf7 to\cf4 : n, \cf7 by\cf4 : \cf8 1\cf4 ) \{\
            \cf2 var\cf4  empty = \cf8 0\cf4 \
            \
            \cf2 if\cf4  arr[m-\cf8 1\cf4 ][j] == \cf10 "0"\cf4  \{\
                empty = m-\cf8 1\cf4 \
            \}\
                \
            \cf2 for\cf4  i \cf2 in\cf4  \cf7 stride\cf4 (\cf7 from\cf4 : m-\cf8 2\cf4 , \cf7 through\cf4 : \cf8 0\cf4 , \cf7 by\cf4 : -\cf8 1\cf4 ) \{ \cf9 //
\f1 \'c7\'e0
\f0 \cf4 \
                \cf2 if\cf4  arr[i][j] == \cf10 "0"\cf4  \{\
                    \cf2 if\cf4  i > empty \{\
                        empty = i\
                    \}\
                \} \cf2 else\cf4  \cf2 if\cf4  arr[i+\cf8 1\cf4 ][j] == \cf10 "0"\cf4 \{\
                    arr[empty][j] = arr[i][j]\
                    arr[i][j] = \cf10 "0"\cf4 \
                    empty -= \cf8 1\cf4 \
                \}\
            \}\
        \}\
    \}\
    \
    \cf2 while\cf4  \cf2 true\cf4  \{\
        check()\
        \
        \cf2 if\cf4  removeBoard == [] \{\
            \cf2 break\cf4 \
        \}\
        \
        countRemove()\
        \
        sortBoard()\
        \
        removeBoard = \cf6 Set\cf4 <[\cf6 Int\cf4 ]>() \cf9 // 
\f1 \'b4\'d9\'c0\'bd
\f0  
\f1 \'b9\'dd\'ba\'b9\'bd\'c3
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad
\f0 \cf4 \
    \}\
    \
    \cf2 return\cf4  count\
\}\
\
\
}