{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red208\green191\blue105;\red161\green103\blue230;\red108\green121\blue134;
}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c42394\c47462\c52518;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\
\cf2 public\cf4  \cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  A : \cf2 inout\cf4  [\cf6 Int\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf2 var\cf4  answer = \cf7 0\cf4 \
    \cf2 var\cf4  minAverage = \cf6 Double\cf4 (A[\cf7 0\cf4 ] + A[\cf7 1\cf4 ]) / \cf7 2.0\cf4 \
    \
    \cf2 for\cf4  i \cf2 in\cf4  \cf7 2\cf4 ..<A.\cf8 count\cf4  \{\
        \
        \cf2 let\cf4  threeAvg = \cf6 Double\cf4 (A[i-\cf7 2\cf4 ]+A[i-\cf7 1\cf4 ]+A[i]) / \cf7 3.0\cf4 \
        \
        \cf2 let\cf4  twoAvg = \cf6 Double\cf4 (A[i-\cf7 1\cf4 ]+A[i]) / \cf7 2.0\cf4 \
        \
        \cf2 if\cf4  minAverage > threeAvg \{\
            answer = i-\cf7 2\cf4 \
            minAverage = threeAvg\
        \}\
        \
        \cf2 if\cf4  minAverage > twoAvg \{\
            answer = i-\cf7 1\cf4 \
            minAverage = twoAvg\
        \}\
    \}\
\
    \cf2 return\cf4  answer\
\}\
\
\cf9 //
\f1 \'b1\'b8\'b0\'a3\'c0\'c7
\f0  
\f1 \'c6\'f2\'b1\'d5\'c0\'ba
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3\'c0\'c7
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0  
\f1 \'c1\'df
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3\'c0\'c7
\f0  
\f1 \'c6\'f2\'b1\'d5\'ba\'b8\'b4\'d9
\f0  
\f1 \'c5\'a9\'b4\'d9
\f0 .\cf4 \
\cf9 //[4,5,6]\cf4 \
\cf9 // 9 / 2 = 4.5  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0 \cf4 \
\cf9 // 11 / 2 = 5.5\cf4 \
\cf9 // 10 / 2 = 5\cf4 \
\cf9 // 15 / 3 = 5 // 
\f1 \'b1\'b8\'b0\'a3
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0 \cf4 \
\
\cf9 // [1,2,3]\cf4 \
\cf9 // 3 / 2 = 1.5 // 
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3\'c6\'f2\'b1\'d5
\f0 \cf4 \
\cf9 // 5 / 2 = 2.5\cf4 \
\cf9 // 4 / 2 = 2\cf4 \
\cf9 // 6 / 2 = 3 // 
\f1 \'b1\'b8\'b0\'a3
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0 \cf4 \
\
\cf9 //->
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3
\f0  
\f1 \'c6\'f2\'b1\'d5\'c0\'bb
\f0  
\f1 \'b1\'b8\'c7\'d2
\f0  
\f1 \'c7\'ca\'bf\'e4\'b0\'a1
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 ! 4
\f1 \'b0\'b3\'b3\'aa
\f0  5
\f1 \'b0\'b3\'b4\'c2
\f0  
\f1 \'be\'ee\'c2\'f7\'c7\'c7
\f0  2
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'ba\'ce\'ba\'d0\'b1\'b8\'b0\'a3\'c0\'bb
\f0  
\f1 \'b0\'a1\'c1\'f6\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae
\f0 \cf4 \
\
}