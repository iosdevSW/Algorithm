{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red255\green255\blue255;\red202\green202\blue202;
\red67\green192\blue160;\red89\green138\blue67;\red70\green137\blue204;\red212\green214\blue154;\red140\green211\blue254;
\red167\green197\blue152;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c100000\c100000\c100000;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c41569\c60000\c33333;\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;
\cssrgb\c70980\c80784\c65882;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 Foundation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 Glibc\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 // you can write to stdout for debugging purposes, e.g.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 // print("this is a debug message")\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 public\cf4 \strokec4  \cf7 \strokec7 func\cf4 \strokec4  \cf8 \strokec8 solution\cf4 \strokec4 (\cf8 \strokec8 _\cf4 \strokec4  \cf9 \strokec9 N\cf4 \strokec4  : \cf5 \strokec5 Int\cf4 \strokec4 , \cf8 \strokec8 _\cf4 \strokec4  \cf9 \strokec9 A\cf4 \strokec4  : \cf7 \strokec7 inout\cf4 \strokec4  [\cf5 \strokec5 Int\cf4 \strokec4 ]) -> [\cf5 \strokec5 Int\cf4 \strokec4 ] \{\cb1 \
\cb3     \cf6 \strokec6 // write your code in Swift 4.2.1 (Linux)\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 var\cf4 \strokec4  counter = [\cf5 \strokec5 Int\cf4 \strokec4 ].\cf7 \strokec7 init\cf4 \strokec4 (\cf8 \strokec8 repeating\cf4 \strokec4 : \cf10 \strokec10 0\cf4 \strokec4 , \cf8 \strokec8 count\cf4 \strokec4 : N)\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  a \cf2 \strokec2 in\cf4 \strokec4  A \{\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  a == N + \cf10 \strokec10 1\cf4 \strokec4  \{\cb1 \
\cb3              \cf6 \strokec6 // 
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'bf\'f8\'bc\'d2
\f0  max
\f1 \'b0\'aa
\f0  (max counter)\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 let\cf4 \strokec4  maxValue = counter.\cf8 \strokec8 max\cf4 \strokec4 () ?? \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3             counter = [\cf5 \strokec5 Int\cf4 \strokec4 ].\cf7 \strokec7 init\cf4 \strokec4 (\cf8 \strokec8 repeating\cf4 \strokec4 : maxValue, \cf8 \strokec8 count\cf4 \strokec4 : N)\cb1 \
\cb3         \}\cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3             counter[a-\cf10 \strokec10 1\cf4 \strokec4 ] += \cf10 \strokec10 1\cf4 \strokec4     \cf6 \strokec6 //
\f1 \'c7\'d8\'b4\'e7
\f0  
\f1 \'bf\'f8\'bc\'d2
\f0  
\f1 \'c4\'ab\'bf\'ee\'c6\'ae
\f0 \cf4 \cb1 \strokec4 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  counter\cb1 \
\cb3 \}\cb1 \
\
}