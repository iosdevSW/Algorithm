{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red65\green161\blue192;\red208\green168\blue255;\red161\green103\blue230;\red108\green121\blue134;\red161\green103\blue230;
\red208\green191\blue105;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c63232\c40219\c90115;
\csgenericrgb\c81498\c74939\c41233;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab577
\pard\tx577\pardeftab577\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 import\cf4  Foundation\
\cf2 import\cf4  Glibc\
\
\cf2 public\cf4  \cf2 func\cf4  \cf5 solution\cf4 (\cf5 _\cf4  A : \cf2 inout\cf4  [\cf6 Int\cf4 ]) -> \cf6 Int\cf4  \{\
    \cf2 let\cf4  n = A.\cf7 max\cf4 ()! \cf8 // n
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'bf\'f8\'bc\'d2\'c0\'cc\'c0\'da
\f0  
\f1 \'c3\'d6\'b4\'eb\'b0\'aa
\f0 n\cf4 \
    \cf2 let\cf4  aSet = \cf6 Set\cf4 (A) \cf8 // 
\f1 \'c1\'df\'ba\'b9
\f0  
\f1 \'c1\'a6\'b0\'c5
\f0 \cf4 \
    \
    \cf8 // 
\f1 \'c1\'df\'ba\'b9\'c0\'cc
\f0  
\f1 \'be\'f8\'be\'ee\'bc\'ad
\f0  set(A)
\f1 \'bf\'cd
\f0  array(A)
\f1 \'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6\'b0\'a1
\f0  
\f1 \'b0\'b0\'b0\'ed
\f0 \cf4 \
    \cf8 // set
\f1 \'c0\'c7
\f0  
\f1 \'b1\'e6\'c0\'cc\'b0\'a1
\f0  
\f1 \'c3\'d6\'b4\'eb\'b0\'aa
\f0  n
\f1 \'b0\'b3\'b8\'e9
\f0  true 
\f1 \'be\'c6\'b4\'cf\'b8\'e9
\f0  false\cf4 \
    \cf2 return\cf4   aSet.\cf9 count\cf4  == A.\cf9 count\cf4  && aSet.\cf9 count\cf4  == n ? \cf10 1\cf4  : \cf10 0\cf4 \
\}\
}